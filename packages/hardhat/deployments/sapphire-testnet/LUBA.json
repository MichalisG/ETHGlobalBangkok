{
  "address": "0xC7544d622c3d07814044A905e664A85C56eD9CCa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bidToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentLowestBidIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalBidAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawn",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bidToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getCreatorAuctionData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBidAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfBids",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawn",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPersonalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getPublicAuctionData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getWinningBid",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            }
          ],
          "internalType": "struct LUBA.Bid",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "readYourBids",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            }
          ],
          "internalType": "struct LUBA.Bid[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        }
      ],
      "name": "startAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "withdrawBidPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x48287a77cb8b2ed6c4acd06b72eabef3efdd571799e0bcab9684fbac338adfe1",
  "receipt": {
    "to": null,
    "from": "0x0114851Eba9Fe019C00A90C467c8d77F374A1837",
    "contractAddress": "0xC7544d622c3d07814044A905e664A85C56eD9CCa",
    "transactionIndex": 0,
    "gasUsed": "1003087",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xce05d1a0c00fea2961cd10a8ff663f744afa79f038623b580c886a878718003f",
    "transactionHash": "0x48287a77cb8b2ed6c4acd06b72eabef3efdd571799e0bcab9684fbac338adfe1",
    "logs": [],
    "blockNumber": 9047047,
    "cumulativeGasUsed": "1003087",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xda0a85E3fe5a919aF72225586620630EDAbA2F46"
  ],
  "numDeployments": 5,
  "solcInputHash": "7c85dc08a00349ef669f9c3f37e261dc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bidToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLowestBidIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bidToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getCreatorAuctionData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfBids\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPersonalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getPublicAuctionData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getWinningBid\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"internalType\":\"struct LUBA.Bid\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"readYourBids\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"internalType\":\"struct LUBA.Bid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"}],\"name\":\"startAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"withdrawBidPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LUBA.sol\":\"LUBA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/LUBA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n// this is a LUBA (Lowest Unique Bid Auction).\\n\\n// it is a simple auction where the lowest unique (or first) bid is the winner.\\n\\ncontract LUBA {\\n  IERC20 public bidToken;\\n\\n  struct Bid {\\n    uint256 amount;\\n    address bidder;\\n  }\\n\\n  struct Auction {\\n    address creator;\\n    uint256 endTime;\\n    uint256 biddingUnit; // the smallest amount that can be bid. every bid must be a multiple of this amount.\\n    Bid[] bids;\\n    mapping(address => uint256[]) bidsByBidder;\\n    uint256 currentLowestBidIndex;\\n    uint256 totalBidAmount;\\n    bool withdrawn;\\n  }\\n\\n  mapping(address => uint256) public userBalances;\\n\\n  event AuctionCreated(\\n    uint256 indexed auctionId,\\n    address indexed creator,\\n    uint256 endTime,\\n    uint256 biddingUnit\\n  );\\n\\n  event BidPlaced(\\n    uint256 indexed auctionId,\\n    address indexed bidder\\n  );\\n\\n  Auction[] public auctions;\\n\\n  constructor(address _bidToken) {\\n    bidToken = IERC20(_bidToken);\\n  }\\n\\n  function startAuction(uint256 endTime, uint256 biddingUnit) public {\\n    require(endTime > block.timestamp, \\\"End time must be in the future\\\");\\n    require(biddingUnit > 0, \\\"Bidding unit must be greater than 0\\\");\\n\\n    auctions.push();\\n    uint256 newAuctionId = auctions.length - 1;\\n    Auction storage newAuction = auctions[newAuctionId];\\n\\n    newAuction.creator = msg.sender;\\n    newAuction.endTime = endTime;\\n    newAuction.biddingUnit = biddingUnit;\\n    newAuction.withdrawn = false;\\n\\n    emit AuctionCreated(newAuctionId, msg.sender, endTime, biddingUnit);\\n  }\\n\\n  function placeBid(uint256 auctionId, uint256 multiplier) public {\\n    require(auctions[auctionId].endTime > block.timestamp, \\\"Auction has ended or not existing\\\");\\n    uint256 amount = multiplier * auctions[auctionId].biddingUnit;\\n\\n    require(userBalances[msg.sender] >= amount, \\\"Insufficient balance\\\");\\n\\n    Auction storage auction = auctions[auctionId];\\n\\n    // Update total bid amount\\n    auction.totalBidAmount += amount;\\n\\n    // store always any valid bid\\n    auction.bids.push(Bid(amount, msg.sender));\\n\\n    auction.bidsByBidder[msg.sender].push(auction.bids.length - 1); // store the index of the bid\\n\\n    // update the current lowest bid index if the new bid is lower\\n    Bid memory currentLowestBid = auction.bids[auction.currentLowestBidIndex];\\n    if (amount < currentLowestBid.amount || currentLowestBid.amount == 0) {\\n      auction.currentLowestBidIndex = auction.bids.length - 1;\\n    }\\n\\n    userBalances[msg.sender] -= amount;\\n\\n    emit BidPlaced(auctionId, msg.sender);\\n  }\\n\\n  function readYourBids(uint256 auctionId) public view returns (Bid[] memory) {\\n    uint256[] memory bidIds = auctions[auctionId].bidsByBidder[msg.sender];\\n\\n    Bid[] memory bids = new Bid[](bidIds.length);\\n    for (uint256 i = 0; i < bidIds.length; i++) {\\n      bids[i] = auctions[auctionId].bids[bidIds[i]];\\n    }\\n    return bids;\\n  }\\n\\n  function getWinningBid(uint256 auctionId) public view returns (Bid memory) {\\n    require(auctions[auctionId].endTime < block.timestamp, \\\"Auction has not ended yet\\\");\\n\\n    return auctions[auctionId].bids[auctions[auctionId].currentLowestBidIndex];\\n  }\\n\\n  // New function to withdraw tokens after auction ends\\n  function withdrawBidPool(uint256 auctionId) public {\\n    Auction storage auction = auctions[auctionId];\\n    require(msg.sender == auction.creator, \\\"Only auction creator can withdraw\\\");\\n    require(auction.endTime < block.timestamp, \\\"Auction has not ended yet\\\");\\n    require(!auction.withdrawn, \\\"Tokens already withdrawn\\\");\\n\\n    auction.withdrawn = true;\\n    require(bidToken.transfer(auction.creator, auction.totalBidAmount), \\\"Token transfer failed\\\");\\n  }\\n\\n  function addBalance(uint256 amount) public {\\n    require(amount > 0, \\\"Amount must be greater than 0\\\");\\n    bidToken.transferFrom(msg.sender, address(this), amount);\\n\\n    userBalances[msg.sender] += amount;\\n  }\\n\\n  function withdrawBalance() public {\\n    require(userBalances[msg.sender] > 0, \\\"No balance to withdraw\\\");\\n\\n    bidToken.transfer(msg.sender, userBalances[msg.sender]);\\n    userBalances[msg.sender] = 0;\\n  }\\n\\n  function getPersonalBalance() public view returns (uint256) {\\n    return userBalances[msg.sender];\\n  }\\n\\n  function auctionsLength() public view returns (uint256) {\\n    return auctions.length;\\n  }\\n\\n  function getPublicAuctionData(uint256 auctionId) public view returns (\\n    uint256 endTime,\\n    uint256 biddingUnit,\\n    uint256 bidsCount\\n  ) {\\n    Auction storage auction = auctions[auctionId];\\n\\n    return (auction.endTime, auction.biddingUnit, auction.bids.length);\\n  }\\n\\n  function getCreatorAuctionData(uint256 auctionId) public view returns (\\n    uint256 totalBidAmount,\\n    uint256 numberOfBids,\\n    bool withdrawn\\n  ) {\\n    require(msg.sender == auctions[auctionId].creator, \\\"Only auction creator can access this data\\\");\\n\\n    Auction storage auction = auctions[auctionId];\\n\\n    return (auction.totalBidAmount, auction.bids.length, auction.withdrawn);\\n  }\\n}\\n\",\"keccak256\":\"0x2ad0a5aabd621a30707575e937db7b3920539276ba46f927706f663a3dec6c92\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161113538038061113583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6110a2806100936000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635fd8c7101161008c578063d3cc6eb211610066578063d3cc6eb21461024f578063d91921ed14610257578063dfafd4fd1461026a578063edbd48e51461029557600080fd5b80635fd8c710146101f75780636891939d146101ff5780638e62b0611461021f57600080fd5b80633d681505116100c85780633d681505146101705780634fee13fc14610185578063571a26a01461019857806357c90de5146101e457600080fd5b806326224c64146100ef578063308ae25d14610122578063342c0b7e14610142575b600080fd5b61010f6100fd366004610ec5565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b610135610130366004610ef5565b6102aa565b6040516101199190610f0e565b610155610150366004610ef5565b610456565b60408051938452602084019290925290820152606001610119565b61018361017e366004610ef5565b61049c565b005b610183610193366004610f6e565b6106a5565b6101ab6101a6366004610ef5565b610804565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c001610119565b6101836101f2366004610f6e565b610857565b610183610af8565b61021261020d366004610ef5565b610be6565b6040516101199190610f90565b61023261022d366004610ef5565b610cfb565b604080519384526020840192909252151590820152606001610119565b60025461010f565b610183610265366004610ef5565b610dd2565b60005461027d906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b3360009081526001602052604090205461010f565b60606000600283815481106102c1576102c1610fb2565b6000918252602080832033845260046008909302019190910181526040918290208054835181840281018401909452808452909183018282801561032457602002820191906000526020600020905b815481526020019060010190808311610310575b505050505090506000815167ffffffffffffffff81111561034757610347610fc8565b60405190808252806020026020018201604052801561038c57816020015b60408051808201909152600080825260208201528152602001906001900390816103655790505b50905060005b825181101561044e57600285815481106103ae576103ae610fb2565b90600052602060002090600802016003018382815181106103d1576103d1610fb2565b6020026020010151815481106103e9576103e9610fb2565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b031691810191909152825183908390811061043057610430610fb2565b6020026020010181905250808061044690610ff4565b915050610392565b509392505050565b6000806000806002858154811061046f5761046f610fb2565b60009182526020909120600890910201600181015460028201546003909201549097919650945092505050565b6000600282815481106104b1576104b1610fb2565b6000918252602090912060089091020180549091506001600160a01b0316331461052c5760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061756374696f6e2063726561746f722063616e20776974686472616044820152607760f81b60648201526084015b60405180910390fd5b4281600101541061057b5760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b6044820152606401610523565b600781015460ff16156105d05760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320616c72656164792077697468647261776e00000000000000006044820152606401610523565b60078101805460ff191660011790556000548154600683015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061100d565b6106a15760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610523565b5050565b4282116106f45760405162461bcd60e51b815260206004820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152606401610523565b600081116107505760405162461bcd60e51b815260206004820152602360248201527f42696464696e6720756e6974206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610523565b600280546001908101808355600092835261076b919061102f565b905060006002828154811061078257610782610fb2565b60009182526020918290206008909102018054336001600160a01b031990911681178255600182018790556002820186905560078201805460ff19169055604080518881529384018790529193509184917fc9050d42180a61cb0d9ebb8ad118b62fe6eab12cf12ff752c4a0cc7da9ddf627910160405180910390a350505050565b6002818154811061081457600080fd5b60009182526020909120600890910201805460018201546002830154600584015460068501546007909501546001600160a01b0390941695509193909260ff1686565b426002838154811061086b5761086b610fb2565b906000526020600020906008020160010154116108d45760405162461bcd60e51b815260206004820152602160248201527f41756374696f6e2068617320656e646564206f72206e6f74206578697374696e6044820152606760f81b6064820152608401610523565b6000600283815481106108e9576108e9610fb2565b906000526020600020906008020160020154826109069190611042565b3360009081526001602052604090205490915081111561095f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610523565b60006002848154811061097457610974610fb2565b90600052602060002090600802019050818160060160008282546109989190611059565b909155505060408051808201825283815233602080830182815260038601805460018082018355600083815285812097516002909302909701918255925190830180546001600160a01b0319166001600160a01b03909216919091179055928452600486019091529290912090549091610a119161102f565b8154600181018355600092835260208320015560058201546003830180549091908110610a4057610a40610fb2565b60009182526020918290206040805180820190915260029092020180548083526001909101546001600160a01b0316928201929092529150831080610a8457508051155b15610aa0576003820154610a9a9060019061102f565b60058301555b3360009081526001602052604081208054859290610abf90849061102f565b9091555050604051339086907f5445de3f4fe13efb115ec05c57e09cc0e277801d0cd2ae780457ebcd8688c39190600090a35050505050565b33600090815260016020526040902054610b4d5760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606401610523565b6000805433808352600160205260409283902054925163a9059cbb60e01b8152600481019190915260248101929092526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd3919061100d565b5033600090815260016020526040812055565b60408051808201909152600080825260208201524260028381548110610c0e57610c0e610fb2565b90600052602060002090600802016001015410610c695760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b6044820152606401610523565b60028281548110610c7c57610c7c610fb2565b906000526020600020906008020160030160028381548110610ca057610ca0610fb2565b90600052602060002090600802016005015481548110610cc257610cc2610fb2565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b03169181019190915292915050565b600080600060028481548110610d1357610d13610fb2565b60009182526020909120600890910201546001600160a01b03163314610d8d5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792061756374696f6e2063726561746f722063616e206163636573732060448201526874686973206461746160b81b6064820152608401610523565b600060028581548110610da257610da2610fb2565b6000918252602090912060089091020160068101546003820154600790920154909791965060ff16945092505050565b60008111610e225760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610523565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d919061100d565b503360009081526001602052604081208054839290610ebd908490611059565b909155505050565b600060208284031215610ed757600080fd5b81356001600160a01b0381168114610eee57600080fd5b9392505050565b600060208284031215610f0757600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610f6157610f51848351805182526020908101516001600160a01b0316910152565b9284019290850190600101610f2b565b5091979650505050505050565b60008060408385031215610f8157600080fd5b50508035926020909101359150565b815181526020808301516001600160a01b031690820152604081015b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161100657611006610fde565b5060010190565b60006020828403121561101f57600080fd5b81518015158114610eee57600080fd5b81810381811115610fac57610fac610fde565b8082028115828204841417610fac57610fac610fde565b80820180821115610fac57610fac610fde56fea264697066735822122010208d5d3ea6b1e7480c7e401c64c6d0ccf6efbd881410e9d257b92af7034c7464736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635fd8c7101161008c578063d3cc6eb211610066578063d3cc6eb21461024f578063d91921ed14610257578063dfafd4fd1461026a578063edbd48e51461029557600080fd5b80635fd8c710146101f75780636891939d146101ff5780638e62b0611461021f57600080fd5b80633d681505116100c85780633d681505146101705780634fee13fc14610185578063571a26a01461019857806357c90de5146101e457600080fd5b806326224c64146100ef578063308ae25d14610122578063342c0b7e14610142575b600080fd5b61010f6100fd366004610ec5565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b610135610130366004610ef5565b6102aa565b6040516101199190610f0e565b610155610150366004610ef5565b610456565b60408051938452602084019290925290820152606001610119565b61018361017e366004610ef5565b61049c565b005b610183610193366004610f6e565b6106a5565b6101ab6101a6366004610ef5565b610804565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c001610119565b6101836101f2366004610f6e565b610857565b610183610af8565b61021261020d366004610ef5565b610be6565b6040516101199190610f90565b61023261022d366004610ef5565b610cfb565b604080519384526020840192909252151590820152606001610119565b60025461010f565b610183610265366004610ef5565b610dd2565b60005461027d906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b3360009081526001602052604090205461010f565b60606000600283815481106102c1576102c1610fb2565b6000918252602080832033845260046008909302019190910181526040918290208054835181840281018401909452808452909183018282801561032457602002820191906000526020600020905b815481526020019060010190808311610310575b505050505090506000815167ffffffffffffffff81111561034757610347610fc8565b60405190808252806020026020018201604052801561038c57816020015b60408051808201909152600080825260208201528152602001906001900390816103655790505b50905060005b825181101561044e57600285815481106103ae576103ae610fb2565b90600052602060002090600802016003018382815181106103d1576103d1610fb2565b6020026020010151815481106103e9576103e9610fb2565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b031691810191909152825183908390811061043057610430610fb2565b6020026020010181905250808061044690610ff4565b915050610392565b509392505050565b6000806000806002858154811061046f5761046f610fb2565b60009182526020909120600890910201600181015460028201546003909201549097919650945092505050565b6000600282815481106104b1576104b1610fb2565b6000918252602090912060089091020180549091506001600160a01b0316331461052c5760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061756374696f6e2063726561746f722063616e20776974686472616044820152607760f81b60648201526084015b60405180910390fd5b4281600101541061057b5760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b6044820152606401610523565b600781015460ff16156105d05760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320616c72656164792077697468647261776e00000000000000006044820152606401610523565b60078101805460ff191660011790556000548154600683015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061100d565b6106a15760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610523565b5050565b4282116106f45760405162461bcd60e51b815260206004820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152606401610523565b600081116107505760405162461bcd60e51b815260206004820152602360248201527f42696464696e6720756e6974206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610523565b600280546001908101808355600092835261076b919061102f565b905060006002828154811061078257610782610fb2565b60009182526020918290206008909102018054336001600160a01b031990911681178255600182018790556002820186905560078201805460ff19169055604080518881529384018790529193509184917fc9050d42180a61cb0d9ebb8ad118b62fe6eab12cf12ff752c4a0cc7da9ddf627910160405180910390a350505050565b6002818154811061081457600080fd5b60009182526020909120600890910201805460018201546002830154600584015460068501546007909501546001600160a01b0390941695509193909260ff1686565b426002838154811061086b5761086b610fb2565b906000526020600020906008020160010154116108d45760405162461bcd60e51b815260206004820152602160248201527f41756374696f6e2068617320656e646564206f72206e6f74206578697374696e6044820152606760f81b6064820152608401610523565b6000600283815481106108e9576108e9610fb2565b906000526020600020906008020160020154826109069190611042565b3360009081526001602052604090205490915081111561095f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610523565b60006002848154811061097457610974610fb2565b90600052602060002090600802019050818160060160008282546109989190611059565b909155505060408051808201825283815233602080830182815260038601805460018082018355600083815285812097516002909302909701918255925190830180546001600160a01b0319166001600160a01b03909216919091179055928452600486019091529290912090549091610a119161102f565b8154600181018355600092835260208320015560058201546003830180549091908110610a4057610a40610fb2565b60009182526020918290206040805180820190915260029092020180548083526001909101546001600160a01b0316928201929092529150831080610a8457508051155b15610aa0576003820154610a9a9060019061102f565b60058301555b3360009081526001602052604081208054859290610abf90849061102f565b9091555050604051339086907f5445de3f4fe13efb115ec05c57e09cc0e277801d0cd2ae780457ebcd8688c39190600090a35050505050565b33600090815260016020526040902054610b4d5760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606401610523565b6000805433808352600160205260409283902054925163a9059cbb60e01b8152600481019190915260248101929092526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd3919061100d565b5033600090815260016020526040812055565b60408051808201909152600080825260208201524260028381548110610c0e57610c0e610fb2565b90600052602060002090600802016001015410610c695760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b6044820152606401610523565b60028281548110610c7c57610c7c610fb2565b906000526020600020906008020160030160028381548110610ca057610ca0610fb2565b90600052602060002090600802016005015481548110610cc257610cc2610fb2565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b03169181019190915292915050565b600080600060028481548110610d1357610d13610fb2565b60009182526020909120600890910201546001600160a01b03163314610d8d5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792061756374696f6e2063726561746f722063616e206163636573732060448201526874686973206461746160b81b6064820152608401610523565b600060028581548110610da257610da2610fb2565b6000918252602090912060089091020160068101546003820154600790920154909791965060ff16945092505050565b60008111610e225760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610523565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d919061100d565b503360009081526001602052604081208054839290610ebd908490611059565b909155505050565b600060208284031215610ed757600080fd5b81356001600160a01b0381168114610eee57600080fd5b9392505050565b600060208284031215610f0757600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610f6157610f51848351805182526020908101516001600160a01b0316910152565b9284019290850190600101610f2b565b5091979650505050505050565b60008060408385031215610f8157600080fd5b50508035926020909101359150565b815181526020808301516001600160a01b031690820152604081015b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161100657611006610fde565b5060010190565b60006020828403121561101f57600080fd5b81518015158114610eee57600080fd5b81810381811115610fac57610fac610fde565b8082028115828204841417610fac57610fac610fde565b80820180821115610fac57610fac610fde56fea264697066735822122010208d5d3ea6b1e7480c7e401c64c6d0ccf6efbd881410e9d257b92af7034c7464736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/LUBA.sol:LUBA",
        "label": "bidToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 114,
        "contract": "contracts/LUBA.sol:LUBA",
        "label": "userBalances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 134,
        "contract": "contracts/LUBA.sol:LUBA",
        "label": "auctions",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Auction)110_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Auction)110_storage)dyn_storage": {
        "base": "t_struct(Auction)110_storage",
        "encoding": "dynamic_array",
        "label": "struct LUBA.Auction[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Bid)88_storage)dyn_storage": {
        "base": "t_struct(Bid)88_storage",
        "encoding": "dynamic_array",
        "label": "struct LUBA.Bid[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Auction)110_storage": {
        "encoding": "inplace",
        "label": "struct LUBA.Auction",
        "members": [
          {
            "astId": 90,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 92,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "endTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 94,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "biddingUnit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "bids",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Bid)88_storage)dyn_storage"
          },
          {
            "astId": 103,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "bidsByBidder",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
          },
          {
            "astId": 105,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "currentLowestBidIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 107,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "totalBidAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 109,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "withdrawn",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(Bid)88_storage": {
        "encoding": "inplace",
        "label": "struct LUBA.Bid",
        "members": [
          {
            "astId": 85,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 87,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "bidder",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}