{
  "address": "0xFdC838454Dfd2ED507f5CC24A9B610FA6cf5639a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bidToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalBidAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawn",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bidToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "endAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getCreatorAuctionData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBidAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfBids",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawn",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPersonalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getPublicAuctionData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidsCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "readYourBids",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            }
          ],
          "internalType": "struct LUBA.Bid[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "revealBids",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            }
          ],
          "internalType": "struct LUBA.Bid[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "biddingUnit",
          "type": "uint256"
        }
      ],
      "name": "startAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "withdrawBidPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5011a096b9944d95f94df5cb25e8fd18d7f903622c7b3321a97c64745a573256",
  "receipt": {
    "to": null,
    "from": "0x0114851Eba9Fe019C00A90C467c8d77F374A1837",
    "contractAddress": "0xFdC838454Dfd2ED507f5CC24A9B610FA6cf5639a",
    "transactionIndex": 0,
    "gasUsed": "983121",
    "logsBloom": "0x
    "blockHash": "0xd0f6a0e0144db769e76e3fc8a63cede8b70e98d2fdebf4925b565f113d76dd6d",
    "transactionHash": "0x5011a096b9944d95f94df5cb25e8fd18d7f903622c7b3321a97c64745a573256",
    "logs": [],
    "blockNumber": 9051168,
    "cumulativeGasUsed": "983121",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1797b88041A4fE9c5702deE70CD578Eaa18d7b62"
  ],
  "numDeployments": 7,
  "solcInputHash": "f3ab7dd48bc466fc31c3a45dda18758a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bidToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bidToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getCreatorAuctionData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfBids\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPersonalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getPublicAuctionData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidsCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"readYourBids\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"internalType\":\"struct LUBA.Bid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"revealBids\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"internalType\":\"struct LUBA.Bid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingUnit\",\"type\":\"uint256\"}],\"name\":\"startAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"withdrawBidPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LUBA.sol\":\"LUBA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/LUBA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n// this is a LUBA (Lowest Unique Bid Auction).\\n\\n// it is a simple auction where the lowest unique (or first) bid is the winner.\\n\\ncontract LUBA {\\n  IERC20 public bidToken;\\n\\n  struct Bid {\\n    uint256 amount;\\n    address bidder;\\n  }\\n\\n  struct Auction {\\n    address creator;\\n    uint256 endTime;\\n    uint256 biddingUnit; // the smallest amount that can be bid. every bid must be a multiple of this amount.\\n    Bid[]bids;\\n    mapping(address => uint256[]) bidsByBidder;\\n    uint256 totalBidAmount;\\n    bool withdrawn;\\n  }\\n\\n  mapping(address => uint256) public userBalances;\\n\\n  event AuctionCreated(\\n    uint256 indexed auctionId,\\n    address indexed creator,\\n    uint256 endTime,\\n    uint256 biddingUnit\\n  );\\n\\n  event BidPlaced(\\n    uint256 indexed auctionId,\\n    address indexed bidder\\n  );\\n\\n  Auction[] public auctions;\\n\\n  constructor(address _bidToken) {\\n    bidToken = IERC20(_bidToken);\\n  }\\n\\n  function startAuction(uint256 endTime, uint256 biddingUnit) public {\\n    require(endTime > block.timestamp, \\\"End time must be in the future\\\");\\n    require(biddingUnit > 0, \\\"Bidding unit must be greater than 0\\\");\\n\\n    auctions.push();\\n    uint256 newAuctionId = auctions.length - 1;\\n    Auction storage newAuction = auctions[newAuctionId];\\n\\n    newAuction.creator = msg.sender;\\n    newAuction.endTime = endTime;\\n    newAuction.biddingUnit = biddingUnit;\\n    newAuction.withdrawn = false;\\n\\n    emit AuctionCreated(newAuctionId, msg.sender, endTime, biddingUnit);\\n  }\\n\\n  function endAuction(uint256 auctionId) public {\\n    require(msg.sender == auctions[auctionId].creator, \\\"Only auction creator can end it\\\");\\n\\n    auctions[auctionId].endTime = block.timestamp;\\n  }\\n\\n  function placeBid(uint256 auctionId, uint256 multiplier) public {\\n    require(auctions[auctionId].endTime > block.timestamp, \\\"Auction has ended or not existing\\\");\\n    uint256 amount = multiplier * auctions[auctionId].biddingUnit;\\n\\n    Auction storage auction = auctions[auctionId];\\n\\n    // Update total bid amount\\n    auction.totalBidAmount += amount;\\n\\n    // store always any valid bid\\n    auction.bids.push(Bid(amount, msg.sender));\\n\\n    auction.bidsByBidder[msg.sender].push(auction.bids.length - 1); // store the index of the bid\\n\\n    emit BidPlaced(auctionId, msg.sender);\\n  }\\n\\n  function readYourBids(uint256 auctionId) public view returns (Bid[] memory) {\\n    uint256[] memory bidIds = auctions[auctionId].bidsByBidder[msg.sender];\\n\\n    Bid[] memory bids = new Bid[](bidIds.length);\\n    for (uint256 i = 0; i < bidIds.length; i++) {\\n      bids[i] = auctions[auctionId].bids[bidIds[i]];\\n    }\\n    return bids;\\n  }\\n\\n  function revealBids(uint256 auctionId) public view returns (Bid[] memory) {\\n    require(auctions[auctionId].endTime < block.timestamp, \\\"Auction has not ended yet\\\");\\n\\n    return auctions[auctionId].bids;\\n  }\\n\\n  // New function to withdraw tokens after auction ends\\n  function withdrawBidPool(uint256 auctionId) public {\\n    Auction storage auction = auctions[auctionId];\\n    require(msg.sender == auction.creator, \\\"Only auction creator can withdraw\\\");\\n    require(auction.endTime < block.timestamp, \\\"Auction has not ended yet\\\");\\n    require(!auction.withdrawn, \\\"Tokens already withdrawn\\\");\\n\\n    auction.withdrawn = true;\\n    require(bidToken.transfer(auction.creator, auction.totalBidAmount), \\\"Token transfer failed\\\");\\n  }\\n\\n  function addBalance(uint256 amount) public {\\n    require(amount > 0, \\\"Amount must be greater than 0\\\");\\n    bidToken.transferFrom(msg.sender, address(this), amount);\\n\\n    userBalances[msg.sender] += amount;\\n  }\\n\\n  function withdrawBalance() public {\\n    require(userBalances[msg.sender] > 0, \\\"No balance to withdraw\\\");\\n\\n    bidToken.transfer(msg.sender, userBalances[msg.sender]);\\n    userBalances[msg.sender] = 0;\\n  }\\n\\n  function getPersonalBalance() public view returns (uint256) {\\n    return userBalances[msg.sender];\\n  }\\n\\n  function auctionsLength() public view returns (uint256) {\\n    return auctions.length;\\n  }\\n\\n  function getPublicAuctionData(uint256 auctionId) public view returns (\\n    uint256 endTime,\\n    uint256 biddingUnit,\\n    uint256 bidsCount,\\n    address creator\\n  ) {\\n    Auction storage auction = auctions[auctionId];\\n\\n    return (auction.endTime, auction.biddingUnit, auction.bids.length, auction.creator);\\n  }\\n\\n  function getCreatorAuctionData(uint256 auctionId) public view returns (\\n    uint256 totalBidAmount,\\n    uint256 numberOfBids,\\n    bool withdrawn\\n  ) {\\n    require(msg.sender == auctions[auctionId].creator, \\\"Only auction creator can access this data\\\");\\n\\n    Auction storage auction = auctions[auctionId];\\n\\n    return (auction.totalBidAmount, auction.bids.length, auction.withdrawn);\\n  }\\n}\\n\",\"keccak256\":\"0x52e96c93ddd1e0568ea7d5e29cfc4c42effd37ac20a71117f84ad2403af8deef\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516110d93803806110d983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611046806100936000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806357c90de511610097578063d3cc6eb211610066578063d3cc6eb21461026d578063d91921ed14610275578063dfafd4fd14610288578063edbd48e5146102b357600080fd5b806357c90de51461020f5780635fd8c710146102225780638e62b0611461022a578063b9a2de3a1461025a57600080fd5b8063342c0b7e116100d3578063342c0b7e146101645780633d681505146101a05780634fee13fc146101b5578063571a26a0146101c857600080fd5b8063029e6e97146100fa57806326224c6414610123578063308ae25d14610151575b600080fd5b61010d610108366004610e8d565b6102c8565b60405161011a9190610ea6565b60405180910390f35b610143610131366004610efe565b60016020526000908152604090205481565b60405190815260200161011a565b61010d61015f366004610e8d565b6103d5565b610177610172366004610e8d565b610581565b604080519485526020850193909352918301526001600160a01b0316606082015260800161011a565b6101b36101ae366004610e8d565b6105d6565b005b6101b36101c3366004610f2e565b6107da565b6101db6101d6366004610e8d565b610939565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a00161011a565b6101b361021d366004610f2e565b610987565b6101b3610b2e565b61023d610238366004610e8d565b610c1c565b60408051938452602084019290925215159082015260600161011a565b6101b3610268366004610e8d565b610cf3565b600254610143565b6101b3610283366004610e8d565b610d9a565b60005461029b906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b33600090815260016020526040902054610143565b606042600283815481106102de576102de610f50565b9060005260206000209060070201600101541061033e5760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b60448201526064015b60405180910390fd5b6002828154811061035157610351610f50565b9060005260206000209060070201600301805480602002602001604051908101604052809291908181526020016000905b828210156103ca5760008481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101610382565b505050509050919050565b60606000600283815481106103ec576103ec610f50565b6000918252602080832033845260046007909302019190910181526040918290208054835181840281018401909452808452909183018282801561044f57602002820191906000526020600020905b81548152602001906001019080831161043b575b505050505090506000815167ffffffffffffffff81111561047257610472610f66565b6040519080825280602002602001820160405280156104b757816020015b60408051808201909152600080825260208201528152602001906001900390816104905790505b50905060005b825181101561057957600285815481106104d9576104d9610f50565b90600052602060002090600702016003018382815181106104fc576104fc610f50565b60200260200101518154811061051457610514610f50565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b031691810191909152825183908390811061055b5761055b610f50565b6020026020010181905250808061057190610f92565b9150506104bd565b509392505050565b60008060008060006002868154811061059c5761059c610f50565b60009182526020909120600790910201600181015460028201546003830154925491999098509196506001600160a01b0316945092505050565b6000600282815481106105eb576105eb610f50565b6000918252602090912060079091020180549091506001600160a01b031633146106615760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061756374696f6e2063726561746f722063616e20776974686472616044820152607760f81b6064820152608401610335565b428160010154106106b05760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b6044820152606401610335565b600681015460ff16156107055760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320616c72656164792077697468647261776e00000000000000006044820152606401610335565b60068101805460ff191660011790556000548154600583015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af115801561076e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107929190610fab565b6107d65760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610335565b5050565b4282116108295760405162461bcd60e51b815260206004820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152606401610335565b600081116108855760405162461bcd60e51b815260206004820152602360248201527f42696464696e6720756e6974206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610335565b60028054600190810180835560009283526108a09190610fcd565b90506000600282815481106108b7576108b7610f50565b60009182526020918290206007909102018054336001600160a01b031990911681178255600182018790556002820186905560068201805460ff19169055604080518881529384018790529193509184917fc9050d42180a61cb0d9ebb8ad118b62fe6eab12cf12ff752c4a0cc7da9ddf627910160405180910390a350505050565b6002818154811061094957600080fd5b6000918252602090912060079091020180546001820154600283015460058401546006909401546001600160a01b0390931694509092909160ff1685565b426002838154811061099b5761099b610f50565b90600052602060002090600702016001015411610a045760405162461bcd60e51b815260206004820152602160248201527f41756374696f6e2068617320656e646564206f72206e6f74206578697374696e6044820152606760f81b6064820152608401610335565b600060028381548110610a1957610a19610f50565b90600052602060002090600702016002015482610a369190610fe6565b9050600060028481548110610a4d57610a4d610f50565b9060005260206000209060070201905081816005016000828254610a719190610ffd565b909155505060408051808201825283815233602080830182815260038601805460018082018355600083815285812097516002909302909701918255925190830180546001600160a01b0319166001600160a01b03909216919091179055928452600486019091529290912090549091610aea91610fcd565b81546001810183556000928352602083200155604051339186917f5445de3f4fe13efb115ec05c57e09cc0e277801d0cd2ae780457ebcd8688c3919190a350505050565b33600090815260016020526040902054610b835760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606401610335565b6000805433808352600160205260409283902054925163a9059cbb60e01b8152600481019190915260248101929092526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c099190610fab565b5033600090815260016020526040812055565b600080600060028481548110610c3457610c34610f50565b60009182526020909120600790910201546001600160a01b03163314610cae5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792061756374696f6e2063726561746f722063616e206163636573732060448201526874686973206461746160b81b6064820152608401610335565b600060028581548110610cc357610cc3610f50565b6000918252602090912060079091020160058101546003820154600690920154909791965060ff16945092505050565b60028181548110610d0657610d06610f50565b60009182526020909120600790910201546001600160a01b03163314610d6e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792061756374696f6e2063726561746f722063616e20656e64206974006044820152606401610335565b4260028281548110610d8257610d82610f50565b90600052602060002090600702016001018190555050565b60008111610dea5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610335565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e659190610fab565b503360009081526001602052604081208054839290610e85908490610ffd565b909155505050565b600060208284031215610e9f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610ef1578151805185528601516001600160a01b0316868501529284019290850190600101610ec3565b5091979650505050505050565b600060208284031215610f1057600080fd5b81356001600160a01b0381168114610f2757600080fd5b9392505050565b60008060408385031215610f4157600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fa457610fa4610f7c565b5060010190565b600060208284031215610fbd57600080fd5b81518015158114610f2757600080fd5b81810381811115610fe057610fe0610f7c565b92915050565b8082028115828204841417610fe057610fe0610f7c565b80820180821115610fe057610fe0610f7c56fea2646970667358221220dd2df12a3e0f649989c93f2f6d8744b18988e39236309af0d272b7640e709a7864736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806357c90de511610097578063d3cc6eb211610066578063d3cc6eb21461026d578063d91921ed14610275578063dfafd4fd14610288578063edbd48e5146102b357600080fd5b806357c90de51461020f5780635fd8c710146102225780638e62b0611461022a578063b9a2de3a1461025a57600080fd5b8063342c0b7e116100d3578063342c0b7e146101645780633d681505146101a05780634fee13fc146101b5578063571a26a0146101c857600080fd5b8063029e6e97146100fa57806326224c6414610123578063308ae25d14610151575b600080fd5b61010d610108366004610e8d565b6102c8565b60405161011a9190610ea6565b60405180910390f35b610143610131366004610efe565b60016020526000908152604090205481565b60405190815260200161011a565b61010d61015f366004610e8d565b6103d5565b610177610172366004610e8d565b610581565b604080519485526020850193909352918301526001600160a01b0316606082015260800161011a565b6101b36101ae366004610e8d565b6105d6565b005b6101b36101c3366004610f2e565b6107da565b6101db6101d6366004610e8d565b610939565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a00161011a565b6101b361021d366004610f2e565b610987565b6101b3610b2e565b61023d610238366004610e8d565b610c1c565b60408051938452602084019290925215159082015260600161011a565b6101b3610268366004610e8d565b610cf3565b600254610143565b6101b3610283366004610e8d565b610d9a565b60005461029b906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b33600090815260016020526040902054610143565b606042600283815481106102de576102de610f50565b9060005260206000209060070201600101541061033e5760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b60448201526064015b60405180910390fd5b6002828154811061035157610351610f50565b9060005260206000209060070201600301805480602002602001604051908101604052809291908181526020016000905b828210156103ca5760008481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101610382565b505050509050919050565b60606000600283815481106103ec576103ec610f50565b6000918252602080832033845260046007909302019190910181526040918290208054835181840281018401909452808452909183018282801561044f57602002820191906000526020600020905b81548152602001906001019080831161043b575b505050505090506000815167ffffffffffffffff81111561047257610472610f66565b6040519080825280602002602001820160405280156104b757816020015b60408051808201909152600080825260208201528152602001906001900390816104905790505b50905060005b825181101561057957600285815481106104d9576104d9610f50565b90600052602060002090600702016003018382815181106104fc576104fc610f50565b60200260200101518154811061051457610514610f50565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b031691810191909152825183908390811061055b5761055b610f50565b6020026020010181905250808061057190610f92565b9150506104bd565b509392505050565b60008060008060006002868154811061059c5761059c610f50565b60009182526020909120600790910201600181015460028201546003830154925491999098509196506001600160a01b0316945092505050565b6000600282815481106105eb576105eb610f50565b6000918252602090912060079091020180549091506001600160a01b031633146106615760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061756374696f6e2063726561746f722063616e20776974686472616044820152607760f81b6064820152608401610335565b428160010154106106b05760405162461bcd60e51b8152602060048201526019602482015278105d58dd1a5bdb881a185cc81b9bdd08195b991959081e595d603a1b6044820152606401610335565b600681015460ff16156107055760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320616c72656164792077697468647261776e00000000000000006044820152606401610335565b60068101805460ff191660011790556000548154600583015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af115801561076e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107929190610fab565b6107d65760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610335565b5050565b4282116108295760405162461bcd60e51b815260206004820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152606401610335565b600081116108855760405162461bcd60e51b815260206004820152602360248201527f42696464696e6720756e6974206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610335565b60028054600190810180835560009283526108a09190610fcd565b90506000600282815481106108b7576108b7610f50565b60009182526020918290206007909102018054336001600160a01b031990911681178255600182018790556002820186905560068201805460ff19169055604080518881529384018790529193509184917fc9050d42180a61cb0d9ebb8ad118b62fe6eab12cf12ff752c4a0cc7da9ddf627910160405180910390a350505050565b6002818154811061094957600080fd5b6000918252602090912060079091020180546001820154600283015460058401546006909401546001600160a01b0390931694509092909160ff1685565b426002838154811061099b5761099b610f50565b90600052602060002090600702016001015411610a045760405162461bcd60e51b815260206004820152602160248201527f41756374696f6e2068617320656e646564206f72206e6f74206578697374696e6044820152606760f81b6064820152608401610335565b600060028381548110610a1957610a19610f50565b90600052602060002090600702016002015482610a369190610fe6565b9050600060028481548110610a4d57610a4d610f50565b9060005260206000209060070201905081816005016000828254610a719190610ffd565b909155505060408051808201825283815233602080830182815260038601805460018082018355600083815285812097516002909302909701918255925190830180546001600160a01b0319166001600160a01b03909216919091179055928452600486019091529290912090549091610aea91610fcd565b81546001810183556000928352602083200155604051339186917f5445de3f4fe13efb115ec05c57e09cc0e277801d0cd2ae780457ebcd8688c3919190a350505050565b33600090815260016020526040902054610b835760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606401610335565b6000805433808352600160205260409283902054925163a9059cbb60e01b8152600481019190915260248101929092526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c099190610fab565b5033600090815260016020526040812055565b600080600060028481548110610c3457610c34610f50565b60009182526020909120600790910201546001600160a01b03163314610cae5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792061756374696f6e2063726561746f722063616e206163636573732060448201526874686973206461746160b81b6064820152608401610335565b600060028581548110610cc357610cc3610f50565b6000918252602090912060079091020160058101546003820154600690920154909791965060ff16945092505050565b60028181548110610d0657610d06610f50565b60009182526020909120600790910201546001600160a01b03163314610d6e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792061756374696f6e2063726561746f722063616e20656e64206974006044820152606401610335565b4260028281548110610d8257610d82610f50565b90600052602060002090600702016001018190555050565b60008111610dea5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610335565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e659190610fab565b503360009081526001602052604081208054839290610e85908490610ffd565b909155505050565b600060208284031215610e9f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610ef1578151805185528601516001600160a01b0316868501529284019290850190600101610ec3565b5091979650505050505050565b600060208284031215610f1057600080fd5b81356001600160a01b0381168114610f2757600080fd5b9392505050565b60008060408385031215610f4157600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fa457610fa4610f7c565b5060010190565b600060208284031215610fbd57600080fd5b81518015158114610f2757600080fd5b81810381811115610fe057610fe0610f7c565b92915050565b8082028115828204841417610fe057610fe0610f7c565b80820180821115610fe057610fe0610f7c56fea2646970667358221220dd2df12a3e0f649989c93f2f6d8744b18988e39236309af0d272b7640e709a7864736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/LUBA.sol:LUBA",
        "label": "bidToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 112,
        "contract": "contracts/LUBA.sol:LUBA",
        "label": "userBalances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 132,
        "contract": "contracts/LUBA.sol:LUBA",
        "label": "auctions",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Auction)108_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Auction)108_storage)dyn_storage": {
        "base": "t_struct(Auction)108_storage",
        "encoding": "dynamic_array",
        "label": "struct LUBA.Auction[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Bid)88_storage)dyn_storage": {
        "base": "t_struct(Bid)88_storage",
        "encoding": "dynamic_array",
        "label": "struct LUBA.Bid[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Auction)108_storage": {
        "encoding": "inplace",
        "label": "struct LUBA.Auction",
        "members": [
          {
            "astId": 90,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 92,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "endTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 94,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "biddingUnit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "bids",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Bid)88_storage)dyn_storage"
          },
          {
            "astId": 103,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "bidsByBidder",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
          },
          {
            "astId": 105,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "totalBidAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 107,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "withdrawn",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Bid)88_storage": {
        "encoding": "inplace",
        "label": "struct LUBA.Bid",
        "members": [
          {
            "astId": 85,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 87,
            "contract": "contracts/LUBA.sol:LUBA",
            "label": "bidder",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}